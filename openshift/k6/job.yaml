kind: Template
apiVersion: v1
objects:
  - apiVersion: v1
    data:
      index.json: |-
        {
          "vus": "10",
          "duration": "30s"
        }
    kind: ConfigMap
    metadata:
      name: ${NAME}-config
      labels:
        app: ${NAME}
        group: sso-k6
        component: ${NAME}-configmap
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}-secret
      labels:
        app: ${NAME}
        group: sso-k6
        component: ${NAME}-secret
    type: Opaque
    stringData:
      SSO_ENV: "${SSO_ENV}"
      SSO_REALM: "${SSO_REALM}"
      SSO_CLIENT: "${SSO_CLIENT}"
      USER_PASSWORD: "${USER_PASSWORD}"
      SSO_SA_CLIENT_ID: "${SSO_SA_CLIENT_ID}"
      SSO_SA_CLIENT_PASSWORD: "${SSO_SA_CLIENT_PASSWORD}"
  - apiVersion: batch/v1
    kind: Job
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          volumes:
            - name: k6-config
              configMap:
                name: ${NAME}-config
            - name: k6-logs
              emptyDir: {}
          containers:
            - image: ${IMAGE_REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_TAG}
              name: ${NAME}
              env:
                - name: SSO_ENV
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-secret
                      key: SSO_ENV
                - name: SSO_REALM
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-secret
                      key: SSO_REALM
                - name: SSO_CLIENT
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-secret
                      key: SSO_CLIENT
                - name: USER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-secret
                      key: USER_PASSWORD
                - name: SSO_SA_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-secret
                      key: SSO_SA_CLIENT_ID
                - name: SSO_SA_CLIENT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-secret
                      key: SSO_SA_CLIENT_PASSWORD
                - name: K6_HTTP_DEBUG
                  value: ${HTTP_DEBUG}
                - name: LOG_OUTPUT_PATH
                  value: ${LOG_OUTPUT_PATH}
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 50m
                  memory: 25Mi
              volumeMounts:
                - name: k6-config
                  mountPath: /var/opt/config
                - name: k6-logs
                  mountPath: ${LOG_OUTPUT_PATH}
          restartPolicy: Never
    metadata:
      name: ${NAME}
      labels:
        app: ${NAME}
        group: sso-k6
        component: ${NAME}-job
parameters:
- name: NAME
  value: sso-k6
- name: IMAGE_TAG
  value: sso-k6:latest
- name: IMAGE_NAMESPACE
  value: devops-sso-tools
- name: IMAGE_REGISTRY
  value: docker-registry.default.svc:5000
- name: SSO_ENV
  description: the environment of the SSO service testing on
  required: true
- name: SSO_REALM
  description: the SSO realm testing against
  required: true
- name: SSO_CLIENT
  description: the SSO client testing against
  required: true
- name: USER_PASSWORD
  description: the test user password
  required: true
- name: SSO_SA_CLIENT_ID
  description: Service account ID
  required: true
- name: SSO_SA_CLIENT_PASSWORD
  description: Service account password
  required: true
- name: LOG_OUTPUT_PATH
  description: the path json logs are written to inside of the pod
  value: /tmp/logs
- name: HTTP_DEBUG
  description: enable http debug logging in the k6 pod
  value: "false"
